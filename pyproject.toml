[tool.pdm]
[tool.pdm.dev-dependencies]
test = [
    "pytest>=7.2.1",
    "pytest-cov>=4.0.0",
]
lint = [
    "ruff>=0.0.245",
]
dev = [
    "jupyter>=1.0.0",
]

[project]
name = "asgard"
version = "0.0.1"
description = "AI in Service of the 2030 agenda Goals in Academic Research and Development"
authors = [
    {name = "Alexandre Henrique", email = "alexandre.hsd@gmail.com"},
]
dependencies = [
    "absl-py==1.4.0",
    "astunparse==1.6.3",
    "cachetools==5.3.0",
    "certifi==2022.12.7",
    "charset-normalizer==3.0.1",
    "flatbuffers==23.1.21",
    "gast==0.4.0",
    "google-auth==2.16.0",
    "google-auth-oauthlib==0.4.6",
    "google-pasta==0.2.0",
    "grpcio==1.51.1",
    "h5py==3.8.0",
    "idna==3.4",
    "importlib-metadata==6.0.0",
    "keras==2.11.0",
    "libclang==15.0.6.1",
    "Markdown==3.4.1",
    "MarkupSafe==2.1.2",
    "numpy==1.24.2",
    "oauthlib==3.2.2",
    "opt-einsum==3.3.0",
    "packaging==23.0",
    "pandas==1.5.3",
    "protobuf==3.19.6",
    "pyasn1==0.4.8",
    "pyasn1-modules==0.2.8",
    "python-dateutil==2.8.2",
    "pytz==2022.7.1",
    "requests==2.28.2",
    "requests-oauthlib==1.3.1",
    "rsa==4.9",
    "six==1.16.0",
    "tensorboard==2.11.2",
    "tensorboard-data-server==0.6.1",
    "tensorboard-plugin-wit==1.8.1",
    "tensorflow==2.11.0",
    "tensorflow-estimator==2.11.0",
    "tensorflow-io-gcs-filesystem==0.30.0",
    "termcolor==2.2.0",
    "typing-extensions==4.4.0",
    "urllib3==1.26.14",
    "Werkzeug==2.2.2",
    "wrapt==1.14.1",
    "zipp==3.13.0",
    "nltk>=3.8.1",
    "spacy>=3.5.0",
    "scikit-learn>=1.2.1",
    "dvc[gdrive]>=2.54.0",
]
requires-python = "==3.9.13"
license = {text = "MIT"}

[build-system]
requires = ["pdm-pep517>=1.0.0"]
build-backend = "pdm.pep517.api"

# ruff linting rules
[tool.ruff]
# The source code paths to consider, e.g., when resolving first- vs. third-party imports.
src = ["asgard", "scripts", ]

# Never enforce `E501` (line length violations).
ignore = ["E501"]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 88

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

# Ignore `E402` (import violations) in all `__init__.py` files, and in `path/to/file.py`.
[tool.ruff.per-file-ignores]
"__init__.py" = ["E402"]
"create_dataset.py" = ["E402"]
"train_rnn.py" = ["E402"]

# pytest configs
[tool.pytest.ini_options]
addopts = "--cov --cov-report term-missing --cov-fail-under 80"
minversion = "7.2.1"
testpaths = ["tests", "tests/unit"]

[tool.coverage.run]
source = ["asgard"]
omit = [
    "asgard/__init__.py",
    "asgard/dataset/__init__.py",
    "asgard/dataset/create_dataset.py",
    "asgard/metrics/__init__.py",
    "asgard/models/__init__.py",
    "asgard/utils/__init__.py",
    "asgard/utils/data_loader.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover"
]
